definitions:
  dto.CreateProductResponseDto:
    properties:
      productId:
        type: string
    required:
    - productId
    type: object
  dto.ProductResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      productId:
        type: string
      updatedAt:
        type: string
    type: object
  dto.ProductsListResponse:
    properties:
      hasMore:
        type: boolean
      page:
        type: integer
      products:
        items:
          $ref: '#/definitions/dto.ProductResponse'
        type: array
      size:
        type: integer
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
  dto.UpdateProductDto:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      productId:
        type: string
    required:
    - description
    - name
    - price
    - productId
    type: object
info:
  contact: {}
paths:
  /products:
    post:
      consumes:
      - application/json
      description: Create new product item
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreateProductResponseDto'
      summary: Create product
      tags:
      - Products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateProductDto'
      summary: Delete product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Get product by id
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponse'
      summary: Get product
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Update existing product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateProductDto'
      summary: Update product
      tags:
      - Products
  /products/search:
    get:
      consumes:
      - application/json
      description: Get product by name with pagination
      parameters:
      - description: search text
        in: query
        name: search
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: number of elements
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductsListResponse'
      summary: Search product
      tags:
      - Products
swagger: "2.0"
